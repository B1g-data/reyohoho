# HTTP-сервер для редиректа на HTTPS
server {
    listen 80;
    server_name localhost;

    # Редирект всего HTTP-трафика на HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS-сервер
server {
    listen 443 ssl;
    server_name localhost;

    # Путь к сертификатам (монтируем из хоста)
    ssl_certificate /etc/letsencrypt/archive/electric-ultralite4049.my-vm.work/fullchain1.pem;
    ssl_certificate_key /etc/letsencrypt/archive/electric-ultralite4049.my-vm.work/privkey1.pem;

    # Дополнительные настройки безопасности SSL
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'HIGH:!aNULL:!MD5';
    ssl_prefer_server_ciphers on;

    # Указываем корневую директорию для статических файлов
    root /usr/share/nginx/html;
    index index.html;

    # Обработка статических файлов (картинок, шрифтов, CSS)
    location /static/ {
        # Кеширование для статических файлов
        expires 30d;  # Храним файлы 30 дней
        add_header Cache-Control "public, no-transform";  # Устанавливаем заголовок Cache-Control
        try_files $uri $uri/ =404;
    }

    # Проксируем все запросы на бэкенд (если не найдены статические файлы)
    location / {
        try_files $uri $uri/ @backend;
    }

    # Прокси-сервер
    location @backend {
        proxy_pass https://rh.aukus.su;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Увеличиваем таймауты для прокси
        proxy_connect_timeout 60s;
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;

        # Отключаем буферизацию для потоковой передачи данных
        proxy_buffering off;
    }

    # Блокируем доступ к скрытым файлам (например, .env, .git)
    location ~ /\. {
        deny all;
    }

    # Обработка ошибок
    error_page 404 /404.html;
    location = /404.html {
        internal;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        internal;
    }
}
